version: '3.8'


networks:
  services-net:
    name: services-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1


services:
  ###################################################
  ## BEGIN REVERSE PROXY AND CERTS ##
  nginx:
    image: eu.gcr.io/dle-dev/nginx:latest
    networks:
      - services-net
    container_name: dle-nginx
    restart: unless-stopped
    volumes:
      - ./volumes/proxy/certs:/etc/letsencrypt
      - /home/dle/services-logs/nginx:/var/log/nginx
      - ./volumes/proxy/acme:/etc/certbot
    ports:
      - 47808:47808
      - 47809:47809
    depends_on:
      - certbot
      - site
      - santa
      - cloud
      - cloud-db
      - deluge
      - cloud-redis
      - jackett
      - radarr
      - sonarr
      - bitwarden
      - bitwarden-private
      - paperless-broker
      - paperless-db
      - paperless-webserver
      - yourls
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.ssl.env

  certbot:
    image: eu.gcr.io/dle-dev/certbot:latest
    networks:
      - services-net
    container_name: dle-certbot
    restart: unless-stopped
    volumes:
      - ./volumes/proxy/certs:/etc/letsencrypt
      - ./volumes/proxy/acme:/etc/certbot
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.ssl.env
    ports:
      - 12079:12079


  ###################################################
  ## BEGINE WEBSITE dle.dev ##
  site:
    image: eu.gcr.io/dle-dev/frontend:0.1.23
    networks:
      - services-net
    container_name: dle-site
    restart: unless-stopped
    expose:
      - 80

  santa:
    image: eu.gcr.io/dle-dev/sm-frontend:latest
    networks:
      - services-net
    container_name: dle-santa
    restart: unless-stopped
    expose:
      - 3000


  ## BEGINE WEBSITE staging.dle.dev ##
  site-staging:
    image: eu.gcr.io/dle-dev/frontend:staging
    networks:
      - services-net
    container_name: dle-site-staging
    restart: unless-stopped
    expose:
      - 80
  ###################################################
  ## BEGIN NEXTCLOUD ##
  cloud:
    image: eu.gcr.io/dle-dev/cloud:23.0.0
    networks:
      - services-net
    container_name: dle-cloud
    depends_on:
      - cloud-db
    volumes:
      - ./volumes/cloud/html:/var/www/html
      - ./volumes/cloud/config:/var/www/html/config
      - ./volumes/cloud/custom-apps:/var/www/html/custom_apps
      - ./volumes/cloud/data:/var/www/html/data
      - ./volumes/cloud/themes:/var/www/html/themes
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./.cloud.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST_PASSWORD=${REDIS_HOST_PASSWORD}

    restart: unless-stopped
    expose:
      - 80

  cloud-db:
    image: postgres:12.2
    networks:
      - services-net
    container_name: dle-cloud-db
    volumes:
      - ./volumes/cloud/db:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./.cloud.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    restart: unless-stopped

  cloud-redis:
    image: redis:6.0.8
    networks:
      - services-net
    container_name: dle-cloud-redis
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    restart: unless-stopped
    expose:
      - 6379


  ###################################################
  ## BEGIN deluge ##
  deluge:
    image: linuxserver/deluge:latest
    networks:
      - services-net
    container_name: dle-deluge
    volumes:
      - ./volumes/deluge/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Series:/Media
      - ./volumes/deluge/shared:/shared
    restart: unless-stopped
    env_file:
      - .linuxserver.env
    environment:
      - UMASK_SET=022
      - WEBUI_PORT=8112

      ###################################################
  ## BEGIN qBitTorrent ##
  qbt:
    image: linuxserver/qbittorrent:latest
    networks:
      - services-net
    container_name: dle-qbt
    volumes:
      - ./volumes/qbt/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Series:/Media
      - ./volumes/qbt/shared:/shared
    expose:
      - 8082
      - 6881
      - 6881/udp
    restart: unless-stopped
    env_file:
      - .linuxserver.env
    environment:
      - UMASK_SET=022
      - WEBUI_PORT=8082


  #################################################
  ### BEGIN RADARR ###
  radarr:
    image: linuxserver/radarr:latest
    networks:
      - services-net
    container_name: dle-radarr
    volumes:
      - ./volumes/radarr/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Movies:/Media/Movies
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/radarr/shared:/shared
    expose:
      - 7878
    restart: unless-stopped
    env_file:
      - .linuxserver.env


  #################################################
  ### BEGIN SONARR ###
  sonarr:
    image: linuxserver/sonarr:latest
    networks:
      - services-net
    container_name: dle-sonarr
    volumes:
      - ./volumes/sonarr/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Series:/Media/Series
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/sonarr/shared:/shared
    expose:
      - 8989
    restart: unless-stopped
    env_file:
      - .linuxserver.env

  #################################################
  ### BEGIN JACKETT ###
  jackett:
    image: linuxserver/jackett:latest
    networks:
      - services-net
    container_name: dle-jackett
    env_file:
      - .linuxserver.env
    volumes:
      - ./volumes/jackett/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
    expose:
      - 9117
    restart: unless-stopped

  #################################################
  ### BEGIN BITWARDEN ###
  bitwarden:
    image: bitwardenrs/server:latest
    networks:
      - services-net
    container_name: dle-bitwarden
    restart: unless-stopped
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.bitwarden.env
    expose:
      - 80
      - 3012
    volumes:
      - /home/dle/services-logs/bitwarden/:/bitwarden-logs/
      - ./volumes/bitwarden/data:/data
      - ./volumes/bitwarden/attachments:/attachments

  bitwarden-private:
    image: bitwardenrs/server:latest
    networks:
      - services-net
    container_name: dle-bitwarden-private
    restart: unless-stopped
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.bitwarden-private.env
    expose:
      - 80
      - 3012
    volumes:
      - /home/dle/services-logs/bitwarden-private/:/bitwarden-logs/
      - ./volumes/bitwarden-private/data:/data
      - ./volumes/bitwarden-private/attachments:/attachments

  #################################################
  ### BEGIN PAPERLESS ###
  paperless-broker:
    image: redis:6.0
    restart: unless-stopped
    networks:
      - services-net
    container_name: dle-paperless-broker
    command: --port 6380
    expose:
      - 6380

  paperless-db:
    image: postgres:13
    restart: unless-stopped
    container_name: dle-paperless-db

    networks:
      - services-net
    volumes:
      - /volumes/paperless-db:/var/lib/postgresql/data

    environment:
      POSTGRES_DB: ${PAPERLESS_POSTGRES_DB}
      POSTGRES_USER: ${PAPERLESS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PAPERLESS_POSTGRES_PASSWORD}

  paperless-webserver:
    image: jonaswinkler/paperless-ng:latest
    restart: unless-stopped
    container_name: dle-paperless-webserver

    networks:
      - services-net
    depends_on:
      - paperless-db
      - paperless-broker
    ports:
      - "8000:8000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://paperless-webserver:8000" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./volumes/paperless/data:/usr/src/paperless/data
      - ./volumes/paperless/media:/usr/src/paperless/media
      - ./volumes/paperless/export:/usr/src/paperless/export
      - ./volumes/paperless/consume:/usr/src/paperless/consume
    env_file: .paperless-webserver.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6380
      PAPERLESS_DBHOST: paperless-db

  paperless-samba:
    image: elswork/samba
    container_name: dle-paperless-samba
    restart: unless-stopped
    environment:
      TZ: 'Europe/Zurich'
      SHARE: ${SAMBA_PERMISSIONS}
      USER: ${SAMBA_CREDENTIALS}
    command: '-u "1000:1000:paperless:paperless:c2oZv8yohL83ViQEJk7XbJC8eukwfige8CFlmyRXfAXNC91Ejz6YzolHcOfZx1WS" -s "shared:/data:rw:paperless"'
    networks:
      - services-net
    ports:
      - "139:139"
      - "445:445"
    volumes:
      - ./volumes/paperless/consume:/data

  #################################################
  ### YOURLS ###
  yourls:
    image: yourls
    container_name: dle-yourls
    restart: unless-stopped
    networks:
      - services-net
    expose:
      - 80
    environment:
      YOURLS_SITE: http://yourls.dle.dev
      YOURLS_DB_USER:  ${YOURLS_DB_USER}
      YOURLS_DB_PASS: ${YOURLS_DB_PASS}
      YOURLS_USER: ${YOURLS_USER}
      YOURLS_PASS: ${YOURLS_PASS}
      YOURLS_DB_HOST: yourls-db:3306
    depends_on:
      - yourls-db
  yourls-db:
    image: mysql
    restart: unless-stopped
    container_name: dle-yourls-db
    networks:
      - services-net
    expose:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: ${YOURLS_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${YOURLS_MYSQL_DATABASE}
      MYSQL_USER: ${YOURLS_DB_USER}
      MYSQL_PASSWORD: ${YOURLS_DB_PASS}
