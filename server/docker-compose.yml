version: '3.8'

networks:
  services-net:
    name: services-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1

services:
  dozzle:
    image: amir20/dozzle:latest
    container_name: dle-docker-logs
    ports:
      - "8888:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - services-net
    restart: unless-stopped

  argo:
    image: eu.gcr.io/dle-dev/argo:1.6.0
    networks:
      - services-net
    container_name: dle-argo
    restart: unless-stopped
    ports:
      - "8099:8099"
    depends_on:
      - proxy
      - dozzle

  ###################################################
  ## BEGIN REVERSE PROXY AND CERTS ##
  proxy:
    image: eu.gcr.io/dle-dev/proxy:latest
    networks:
      - services-net
    container_name: dle-proxy
    restart: unless-stopped
    volumes:
      - ./volumes/proxy/certs:/etc/letsencrypt
      - /home/dle/services-logs/nginx:/var/log/nginx
      - ./volumes/proxy/acme:/etc/certbot
    ports:
      - "47808:47808"
      - "47809:47809"
    depends_on:
      - certbot
      - libre-backend
      - libre-frontend
      - libre-db
      - libre-redis
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.ssl.env

  certbot:
    image: eu.gcr.io/dle-dev/certbot:latest
    networks:
      - services-net
    container_name: dle-certbot
    restart: unless-stopped
    volumes:
      - ./volumes/proxy/certs:/etc/letsencrypt
      - ./volumes/proxy/acme:/etc/certbot
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.ssl.env
    ports:
      - "12079:12079"
  ###################################################
  ## BEGINE WEBSITE joeltest.com ##
  joeltest:
    image: eu.gcr.io/dle-dev/joeltest.com:latest
    networks:
      - services-net
    container_name: dle-joel-test
    restart: unless-stopped
    expose:
      - 3000
    depends_on:
      - argo
  santa:
    image: eu.gcr.io/dle-dev/sm-frontend:latest
    networks:
      - services-net
    container_name: dle-santa
    restart: unless-stopped
    depends_on:
      - argo
    expose:
      - 3000
  ###################################################
  ## BEGIN NEXTCLOUD ##
  cloud:
    image: eu.gcr.io/dle-dev/cloud:27.1.3
    networks:
      services-net:
        ipv4_address: 172.19.0.99
    container_name: dle-cloud
    depends_on:
      - cloud-db
      - argo
    volumes:
      - ./volumes/cloud/html:/var/www/html
      - ./volumes/cloud/config:/var/www/html/config
      - ./volumes/cloud/custom-apps:/var/www/html/custom_apps
      - ./volumes/cloud/data:/var/www/html/data
      - ./volumes/cloud/themes:/var/www/html/themes
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./.cloud.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST_PASSWORD=${REDIS_HOST_PASSWORD}

    restart: unless-stopped
    expose:
      - 80

  cloud-db:
    image: postgres:12.2
    networks:
      - services-net
    container_name: dle-cloud-db
    volumes:
      - ./volumes/cloud/db:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./.cloud.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    restart: unless-stopped

  cloud-redis:
    image: redis:6.0.8
    networks:
      - services-net
    container_name: dle-cloud-redis
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    restart: unless-stopped
    expose:
      - 6379

  ###################################################
  ## BEGIN deluge ##
  deluge:
    image: linuxserver/deluge:latest
    depends_on:
      - argo
    networks:
      - services-net
    container_name: dle-deluge
    volumes:
      - ./volumes/deluge/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Series:/Media
      - ./volumes/deluge/shared:/shared
    restart: unless-stopped
    env_file:
      - .linuxserver.env
    environment:
      - UMASK_SET=022
      - WEBUI_PORT=8112
    ports:
      - "6881:6881"
      - "6881:6881/udp"

  #################################################
  ### BEGIN RADARR ###
  radarr:
    image: linuxserver/radarr:latest
    networks:
      - services-net
    container_name: dle-radarr
    depends_on:
      - argo
    volumes:
      - ./volumes/radarr/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Movies:/Media/Movies
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/radarr/shared:/shared
    expose:
      - 7878
    restart: unless-stopped
    env_file:
      - .linuxserver.env
  #################################################
  ### BEGIN tautulli ###      
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./volumes/tautulli/config:/config
    expose:
      - 8181
    restart: unless-stopped
    networks:
      - services-net
    container_name: dle-tautulli
    depends_on:
      - argo
  #################################################
  ### BEGIN OVERSEERR ###
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: dle-overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./volumes/overseerr/config:/config
    expose:
      - 5055
    restart: unless-stopped
    networks:
      - services-net
    depends_on:
      - argo

  #################################################
  ### BEGIN prowlarr ###
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: dle-prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./volumes/prowlarr/data:/config
    expose:
      - 9696
    networks:
      - services-net
    restart: unless-stopped

  #################################################
  ### BEGIN SONARR ###
  sonarr:
    image: linuxserver/sonarr:latest
    networks:
      - services-net
    container_name: dle-sonarr
    depends_on:
      - argo
    volumes:
      - ./volumes/sonarr/config:/config
      - /mnt/md0/storage/Media/downloads:/downloads
      - /mnt/md0/storage/Media/Series:/Media/Series
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/sonarr/shared:/shared
    expose:
      - 8989
    restart: unless-stopped
    env_file:
      - .linuxserver.env

  #################################################
  ### BEGIN BITWARDEN ###
  bitwarden:
    image: vaultwarden/server:latest
    networks:
      - services-net
    container_name: dle-bitwarden
    restart: unless-stopped
    depends_on:
      - argo
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.bitwarden.env
    expose:
      - 80
      - 3012
    volumes:
      - /home/dle/services-logs/bitwarden/:/bitwarden-logs/
      - ./volumes/bitwarden/data:/data
      - ./volumes/bitwarden/attachments:/attachments

  bitwarden-private:
    image: vaultwarden/server:latest
    networks:
      - services-net
    depends_on:
      - argo
    container_name: dle-bitwarden-private
    restart: unless-stopped
    env_file:
      - ./.${SERVICES_ENVIRONMENT}.bitwarden-private.env
    expose:
      - 80
      - 3012
    volumes:
      - /home/dle/services-logs/bitwarden-private/:/bitwarden-logs/
      - ./volumes/bitwarden-private/data:/data
      - ./volumes/bitwarden-private/attachments:/attachments

  #################################################
  ### BEGIN PAPERLESS ###
  paperless-broker:
    image: redis:6.0
    restart: unless-stopped
    networks:
      - services-net
    container_name: dle-paperless-broker
    command: --port 6380
    expose:
      - 6380

  paperless-db:
    image: postgres:13
    restart: unless-stopped
    container_name: dle-paperless-db
    networks:
      - services-net
    volumes:
      - /volumes/paperless-db:/var/lib/postgresql/data

    environment:
      POSTGRES_DB: ${PAPERLESS_POSTGRES_DB}
      POSTGRES_USER: ${PAPERLESS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PAPERLESS_POSTGRES_PASSWORD}

  paperless-webserver:
    image: jonaswinkler/paperless-ng:latest
    restart: unless-stopped
    container_name: dle-paperless-webserver
    networks:
      - services-net
    depends_on:
      - paperless-db
      - paperless-broker
      - argo
    expose:
      - 8000
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://paperless-webserver:8000"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./volumes/paperless/data:/usr/src/paperless/data
      - ./volumes/paperless/media:/usr/src/paperless/media
      - ./volumes/paperless/export:/usr/src/paperless/export
      - ./volumes/paperless/consume:/usr/src/paperless/consume
    env_file: .paperless-webserver.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6380
      PAPERLESS_DBHOST: paperless-db

  paperless-samba:
    image: elswork/samba
    container_name: dle-paperless-samba
    restart: unless-stopped
    environment:
      TZ: 'Europe/Zurich'
      SHARE: ${SAMBA_PERMISSIONS}
      USER: ${SAMBA_CREDENTIALS}
      HOSTNAME: "cassandra"
    command: '-u "1000:1000:paperless:paperless:c2oZv8yohL83ViQEJk7XbJC8eukwfige8CFlmyRXfAXNC91Ejz6YzolHcOfZx1WS" -s "shared:/data:rw:paperless"'
    networks:
      - services-net
    ports:
      - "139:139"
      - "445:445"
    volumes:
      - ./volumes/paperless/consume:/data

  #################################################
  ### LIBRE PHOTOS   ###
  libre-proxy:
    image: eu.gcr.io/dle-dev/libre-proxy:latest
    container_name: dle-libre-proxy
    restart: unless-stopped
    networks:
      - services-net
    depends_on:
      - libre-redis
      - libre-frontend
      - libre-db
      - libre-backend
    volumes:
      - ${LIBRE_PHOTOS_DIR}:/data
      - ${LIBRE_PRO_MEDIA_DIR}:/protected_media
    expose:
      - 80
  libre-db:
    image: postgres:13
    container_name: dle-libre-db
    environment:
      - POSTGRES_USER=${LIBRE_DB_USER}
      - POSTGRES_PASSWORD=${LIBRE_DB_PASS}
      - POSTGRES_DB=${LIBRE_DB_NAME}
    volumes:
      - ${LIBRE_DB_LOCATION}:/var/lib/postgresql/data
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    networks:
      - services-net
    restart: unless-stopped

  libre-frontend:
    image: reallibrephotos/librephotos-frontend:${LIBRE_TAG}
    container_name: dle-libre-frontend
    depends_on:
      - libre-backend
    networks:
      - services-net
    restart: unless-stopped

  libre-backend:
    image: reallibrephotos/librephotos:${LIBRE_TAG}
    container_name: dle-libre-backend
    volumes:
      - ${LIBRE_PHOTOS_DIR}:/data
      - ${LIBRE_PRO_MEDIA_DIR}:/protected_media
      - ${LIBRE_LOG_DIR}:/logs
      - ${LIBRE_CAHE_DIR}:/root/.cache

    environment:
      - SECRET_KEY=${LIBRE_SHHHH_KEY}
      - BACKEND_HOST=libre-backend
      - ADMIN_EMAIL=${LIBRE_ADMIN_EMAIL}
      - ADMIN_USERNAME=${LIBRE_USER_NAME}
      - ADMIN_PASSWORD=${LIBRE_USER_PASS}
      - DB_BACKEND=postgresql
      - DB_NAME=${LIBRE_DB_NAME}
      - DB_USER=${LIBRE_DB_USER}
      - DB_PASS=${LIBRE_DB_PASS}
      - DB_HOST=${LIBRE_DB_HOST}
      - DB_PORT=5432
      - REDIS_HOST=libre-redis
      - REDIS_PORT=6379
      - MAPBOX_API_KEY=${LIBRE_MAP_API_KEY}
      - WEB_CONCURRENCY=${LIBRE_GUNNI_WORKERS}
      - SKIP_PATTERNS=${LIBRE_SKIP_PATTERNS}
      - ALLOW_UPLOAD=${LIBRE_ALLOW_UPLOAD}
      - DEBUG=0
      - HEAVYWEIGHT_PROCESS=${LIBRE_HEAVYWEIGHT_PROCESS}
    networks:
      - services-net
    # Wait for Postgres
    restart: unless-stopped
    depends_on:
      - libre-db
  libre-redis:
    container_name: dle-libre-redis
    restart: unless-stopped
    image: redis:6
    networks:
      - services-net
  #################################################
  ### bazarr ###
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: dle-bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./volumes/bazarr/config:/config
      - /mnt/md0/storage/Media/Series:/tv
      - /mnt/md0/storage/Media/Movies:/movies
    expose:
      - 6767

    networks:
      - services-net
    restart: unless-stopped
    depends_on:
      - argo

  #################################################
  ### plausible ###

  brain-mail:
    container_name: dle-brain-mail
    image: bytemark/smtp
    restart: unless-stopped
    networks:
      - services-net
  brain-db:
    container_name: dle-brain-db
    # supported versions are 12, 13, and 14
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./volumes/brain/brain-db/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PLAUSIBLE_POSTGRES_PASSWORD}
    networks:
      - services-net

  brain-events-db:
    container_name: dle-brain-events-db
    image: clickhouse/clickhouse-server:22.6-alpine
    restart: unless-stopped
    volumes:
      - ./volumes/brain/brain-events-db/db:/var/lib/clickhouse
      - ./volumes/brain/brain-events-db/config/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./volumes/brain/brain-events-db/config/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - services-net

  brain:
    container_name: dle-brain
    image: plausible/analytics:latest
    restart: unless-stopped
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    depends_on:
      - brain-db
      - brain-events-db
      - brain-mail
    expose:
      - 8000
    environment:
      - CLICKHOUSE_DATABASE_URL=http://brain-events-db:8123/plausible_events_db
      - DATABASE_URL=postgres://postgres:${PLAUSIBLE_POSTGRES_PASSWORD}@brain-db:5432/plausible_db
      - BASE_URL=https://brain.dle.dev:443
      - DISABLE_REGISTRATION=true
      - MAILER_EMAIL=brain@dle.dev
      - SMTP_HOST_ADDR=mail.runbox.com
      - SMTP_HOST_PORT=465
      - SMTP_USER_NAME=${RUNBOX_USR}
      - SMTP_USER_PWD=${RUNBOX_PSW}
      - SECRET_KEY_BASE=${PLAUSIBLE_SECRET_KEY_BASE}
      - SMTP_HOST_SSL_ENABLED=false
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    networks:
      - services-net
