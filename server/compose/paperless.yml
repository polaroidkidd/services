

services:
  paperless-broker:
    image: redis:6.0
    restart: unless-stopped
    networks:
      - services-net
    container_name: paperless-broker
    command: --port 6380
    expose:
      - 6380

  paperless-db:
    image: postgres:13
    restart: unless-stopped
    container_name: paperless-db
    networks:
      - services-net
    volumes:
      - ../volumes/paperless-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${PAPERLESS_POSTGRES_DB}
      POSTGRES_USER: ${PAPERLESS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PAPERLESS_POSTGRES_PASSWORD}

  paperless-webserver:
    image: jonaswinkler/paperless-ng:latest
    restart: unless-stopped
    container_name: paperless-webserver
    networks:
      - services-net
    depends_on:
      - paperless-db
      - paperless-broker
      - argo
    expose:
      - 8000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://paperless-webserver:8000" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ../volumes/paperless/data:/usr/src/paperless/data
      - ../volumes/paperless/media:/usr/src/paperless/media
      - ../volumes/paperless/export:/usr/src/paperless/export
      - ../volumes/paperless/consume:/usr/src/paperless/consume
    env_file: ../.paperless-webserver.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6380
      PAPERLESS_DBHOST: paperless-db

  paperless-samba:
    image: elswork/samba
    container_name: paperless-samba
    restart: unless-stopped
    environment:
      TZ: 'Europe/Zurich'
      SHARE: ${SAMBA_PERMISSIONS}
      USER: ${SAMBA_CREDENTIALS}
      HOSTNAME: "cassandra"
    command: '-u "1000:1000:paperless:paperless:c2oZv8yohL83ViQEJk7XbJC8eukwfige8CFlmyRXfAXNC91Ejz6YzolHcOfZx1WS" -s "shared:/data:rw:paperless"'
    networks:
      - services-net
    ports:
      - "139:139"
      - "445:445"
    volumes:
      - ../volumes/paperless/consume:/data 