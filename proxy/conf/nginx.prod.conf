user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
events {
    worker_connections 1024;
}
http {
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    include /etc/nginx/mime.types;
    # default_type  application/octet-stream;
    default_type text/html;
    log_format main
    '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    sendfile on;
    #tcp_nopush     on;
    keepalive_timeout 65;
    #gzip  on;
    client_max_body_size 10G;
    proxy_request_buffering off;


    server {
        listen 47809 ssl;
        server_name stream.dle.dev;

        ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
        client_max_body_size 20M;

        # Uncomment next line to Disable TLS 1.0 and 1.1 (Might break older devices)
        # ssl_protocols TLSv1.3 TLSv1.2;

        # use a variable to store the upstream proxy
        # in this example we are using a hostname which is resolved via DNS
        # (if you aren't using DNS remove the resolver line and change the variable to point to an IP address e.g `set $jellyfin 127.0.0.1`)
        set $jellyfin 192.168.50.108;
        # resolver 127.0.0.1 valid=30;


        ssl_certificate /etc/letsencrypt/live/dle.dev/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dle.dev/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
        
        
        add_header Strict-Transport-Security "max-age=31536000" always;
        ssl_trusted_certificate /etc/letsencrypt/live/dle.dev/fullchain.pem;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security / XSS Mitigation Headers
        # NOTE: X-Frame-Options may cause issues with the webOS app
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "0"; # Do NOT enable. This is obsolete/dangerous
        add_header X-Content-Type-Options "nosniff";

        # COOP/COEP. Disable if you use external plugins/images/assets
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        # Permissions policy. May cause issues on some clients
        add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), battery=(), bluetooth=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), gamepad=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), keyboard-map=(), local-fonts=(), magnetometer=(), microphone=(), payment=(), publickey-credentials-get=(), serial=(), sync-xhr=(), usb=(), xr-spatial-tracking=()" always;

        # Tell browsers to use per-origin process isolation
        add_header Origin-Agent-Cluster "?1" always;


        # Content Security Policy
        # See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
        # Enforces https content and restricts JS/CSS to origin
        # External Javascript (such as cast_sender.js for Chromecast) must be whitelisted.
        # NOTE: The default CSP headers may cause issues with the webOS app
        #add_header Content-Security-Policy "default-src https: data: blob: http://image.tmdb.org; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'";
        location = / {
            return 302 http://$host/web/;
            #return 302 https://$host/web/;
        }

        location / {
            # Proxy main Jellyfin traffic
            proxy_pass http://$jellyfin:8096;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;

            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            proxy_buffering off;
        }

        # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
        location = /web/ {
            # Proxy main Jellyfin traffic
            proxy_pass http://$jellyfin:8096/web/index.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }

        location /socket {
            # Proxy Jellyfin Websockets traffic
            proxy_pass http://$jellyfin:8096;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }
    }


    #     server {
    #             listen 47809 ssl;
    #             server_name cloud.dle.dev www.cloud.dle.dev;
    #
    #             ssl_certificate /etc/letsencrypt/live/dle.dev/fullchain.pem;
    #             ssl_certificate_key /etc/letsencrypt/live/dle.dev/privkey.pem;
    #             include /etc/letsencrypt/options-ssl-nginx.conf;
    #             ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    #             client_max_body_size 10G;
    #             proxy_request_buffering off;
    #
    #             add_header X-Frame-Options           "SAMEORIGIN" always;
    #             add_header X-XSS-Protection          "1; mode=block" always;
    #             add_header X-Content-Type-Options    "nosniff" always;
    #             add_header Referrer-Policy           "no-referrer-when-downgrade" always;
    #             add_header Content-Security-Policy   "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com/; font-src 'self' https://fonts.gstatic.com; frame-src 'self'; connect-src 'self'; object-src 'none' ";
    #             add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #             location = /.well-known/carddav {
    #                 return 301 $scheme://$host/remote.php/dav;
    #             }
    #             location = /.well-known/caldav {
    #                 return 301 $scheme://$host/remote.php/dav;
    #             }
    #             location /.well-known/webfinger {
    #                 return 301 $scheme://$host/webfinger;
    #             }
    #             location / {
    #                 resolver 127.0.0.11 valid=30s;
    #                 add_header Strict-Transport-Security "max-age=15768000";
    #                 proxy_set_header Host $host;
    #                 proxy_set_header X-Real-IP $remote_addr;
    #                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #                 proxy_set_header X-Forwarded-Proto https;
    #                 proxy_read_timeout 60;
    #                 proxy_connect_timeout 60;
    #                 proxy_redirect off;
    #                 proxy_pass http://cloud:80;
    #             }
    #         }
}